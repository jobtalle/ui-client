import {ParticleHelper, ParticleSystem, Scene, Texture, Vector3} from '@babylonjs/core';

import merge07 from '../static/Particles/merge07.png';
import dotTexture from '../static/Particles/circle_05.png';
import merge03 from '../static/Particles/light_01.png';
import smoke from '../static/Particles/smoke_07.png';

export class InteractionEffectHelper {
  static scene: Scene;

  static initialize(scene: Scene): void {
    this.scene = scene;
  }

  static hi5Particles(spawnLocation: Vector3) {
    // Uses texture: Merge07.png
    const collisionJson = {
      name: 'Collision Particle',
      id: 'Collision Particle',
      capacity: 200,
      disposeOnStop: false,
      manualEmitCount: -1,
      emitter: [0.25, 8, 0],
      particleEmitterType: {
        type: 'PointParticleEmitter',
        direction1: [0, 1, 0],
        direction2: [0, 1, 0]
      },
      texture: {
        tags: null,
        url: 'http://localhost:8080/assets/merge04.png',
        uOffset: 0,
        vOffset: 0,
        uScale: 1,
        vScale: 1,
        uAng: 0,
        vAng: 0,
        wAng: 0,
        uRotationCenter: 0.5,
        vRotationCenter: 0.5,
        wRotationCenter: 0.5,
        homogeneousRotationInUVTransform: false,
        isBlocking: true,
        name: merge07,
        hasAlpha: false,
        getAlphaFromRGB: false,
        level: 1,
        coordinatesIndex: 0,
        optimizeUVAllocation: true,
        coordinatesMode: 0,
        wrapU: 1,
        wrapV: 1,
        wrapR: 1,
        anisotropicFilteringLevel: 4,
        isCube: false,
        is3D: false,
        is2DArray: false,
        gammaSpace: true,
        invertZ: false,
        lodLevelInAlpha: false,
        lodGenerationOffset: 0,
        lodGenerationScale: 0,
        linearSpecularLOD: false,
        isRenderTarget: false,
        animations: [],
        invertY: true,
        samplingMode: 3,
        _useSRGBBuffer: false
      },
      isLocal: false,
      animations: [],
      beginAnimationOnStart: false,
      beginAnimationFrom: 0,
      beginAnimationTo: 60,
      beginAnimationLoop: false,
      startDelay: 0,
      renderingGroupId: 0,
      isBillboardBased: true,
      billboardMode: 7,
      minAngularSpeed: 0,
      maxAngularSpeed: 0,
      minSize: 0.5,
      maxSize: 0.5,
      minScaleX: 1,
      maxScaleX: 1,
      minScaleY: 1,
      maxScaleY: 1,
      minEmitPower: 0,
      maxEmitPower: 0,
      minLifeTime: 1,
      maxLifeTime: 1,
      emitRate: 10,
      gravity: [0, 0, 0],
      noiseStrength: [10, 10, 10],
      color1: [0.47058823529411764, 0.13333333333333333, 0.5725490196078431, 1],
      color2: [0.5294117647058824, 0.8549019607843137, 0.8549019607843137, 1],
      colorDead: [0, 0, 0, 1],
      updateSpeed: 0.01,
      targetStopDuration: 0.4,
      blendMode: 0,
      preWarmCycles: 0,
      preWarmStepOffset: 1,
      minInitialRotation: 0,
      maxInitialRotation: 0,
      startSpriteCellID: 0,
      spriteCellLoop: true,
      endSpriteCellID: 0,
      spriteCellChangeSpeed: 1,
      spriteCellWidth: 0,
      spriteCellHeight: 0,
      spriteRandomStartCell: false,
      isAnimationSheetEnabled: false,
      useLogarithmicDepth: false,
      textureMask: [1, 1, 1, 1],
      customShader: null,
      preventAutoStart: true
    };
    const collisionParticle = ParticleSystem.Parse(collisionJson, this.scene, '');
    collisionParticle.particleTexture = new Texture(merge07); // LINK THIS TO Merge07.png
    collisionParticle.emitter = spawnLocation;

    // Uses texture: Circle_05.png
    const collisionSparksFlyingJson = {
      name: 'Flying sparks',
      id: 'Flying sparks',
      capacity: 200,
      disposeOnStop: false,
      manualEmitCount: -1,
      emitter: [0.25, 8, 0],
      particleEmitterType: {
        type: 'PointParticleEmitter',
        direction1: [-1, -1, -1],
        direction2: [1, 1, 1]
      },
      texture: {
        tags: null,
        url: 'http://localhost:8080/assets/circle_05.png',
        uOffset: 0,
        vOffset: 0,
        uScale: 1,
        vScale: 1,
        uAng: 0,
        vAng: 0,
        wAng: 0,
        uRotationCenter: 0.5,
        vRotationCenter: 0.5,
        wRotationCenter: 0.5,
        homogeneousRotationInUVTransform: false,
        isBlocking: true,
        name: 'http://localhost:8080/assets/circle_05.png',
        hasAlpha: false,
        getAlphaFromRGB: false,
        level: 1,
        coordinatesIndex: 0,
        optimizeUVAllocation: true,
        coordinatesMode: 0,
        wrapU: 1,
        wrapV: 1,
        wrapR: 1,
        anisotropicFilteringLevel: 4,
        isCube: false,
        is3D: false,
        is2DArray: false,
        gammaSpace: true,
        invertZ: false,
        lodLevelInAlpha: false,
        lodGenerationOffset: 0,
        lodGenerationScale: 0,
        linearSpecularLOD: false,
        isRenderTarget: false,
        animations: [],
        invertY: true,
        samplingMode: 3,
        _useSRGBBuffer: false
      },
      isLocal: false,
      animations: [],
      beginAnimationOnStart: false,
      beginAnimationFrom: 0,
      beginAnimationTo: 60,
      beginAnimationLoop: false,
      startDelay: 0,
      renderingGroupId: 0,
      isBillboardBased: true,
      billboardMode: 7,
      minAngularSpeed: 0,
      maxAngularSpeed: 0,
      minSize: 0.2,
      maxSize: 0.4,
      minScaleX: 1,
      maxScaleX: 1,
      minScaleY: 1,
      maxScaleY: 1,
      minEmitPower: 2,
      maxEmitPower: 1,
      minLifeTime: 4,
      maxLifeTime: 5,
      emitRate: 500,
      gravity: [0, -1, 0],
      noiseStrength: [10, 10, 10],
      color1: [0.8666666666666667, 0.1843137254901961, 0.1843137254901961, 1],
      color2: [0.49019607843137253, 0.09411764705882353, 0.49411764705882355, 1],
      colorDead: [0, 0, 0, 1],
      updateSpeed: 0.01,
      targetStopDuration: 0.1,
      blendMode: 0,
      preWarmCycles: 0,
      preWarmStepOffset: 1,
      minInitialRotation: 0,
      maxInitialRotation: 0,
      startSpriteCellID: 0,
      spriteCellLoop: true,
      endSpriteCellID: 0,
      spriteCellChangeSpeed: 1,
      spriteCellWidth: 0,
      spriteCellHeight: 0,
      spriteRandomStartCell: false,
      isAnimationSheetEnabled: false,
      useLogarithmicDepth: false,
      velocityGradients: [
        {gradient: 0, factor1: 4, factor2: 4},
        {gradient: 0.15, factor1: 1, factor2: 1},
        {gradient: 1, factor1: 0, factor2: 0}
      ],
      startSizeGradients: [
        {gradient: 0, factor1: 0.1, factor2: 0.1},
        {gradient: 1, factor1: 1, factor2: 1}
      ],
      textureMask: [1, 1, 1, 1],
      customShader: null,
      preventAutoStart: true
    };
    const collisionSparkFlying = ParticleSystem.Parse(collisionSparksFlyingJson, this.scene, '');
    collisionSparkFlying.particleTexture = new Texture(dotTexture); // LINK THIS TO: circle_05.png
    collisionSparkFlying.emitter = spawnLocation;

    // Uses texture: light_01.png
    const collisionCirclejson = {
      name: 'Collision Circle',
      id: 'Collision Circle',
      capacity: 200,
      disposeOnStop: false,
      manualEmitCount: -1,
      emitter: [0.25, 8, 0],
      particleEmitterType: {
        type: 'PointParticleEmitter',
        direction1: [0, 0, 0],
        direction2: [0, 0, 0]
      },
      texture: {
        tags: null,
        url: 'http://localhost:8080/assets/light_01.png',
        uOffset: 0,
        vOffset: 0,
        uScale: 1,
        vScale: 1,
        uAng: 0,
        vAng: 0,
        wAng: 0,
        uRotationCenter: 0.5,
        vRotationCenter: 0.5,
        wRotationCenter: 0.5,
        homogeneousRotationInUVTransform: false,
        isBlocking: true,
        name: 'http://localhost:8080/assets/light_01.png',
        hasAlpha: false,
        getAlphaFromRGB: false,
        level: 1,
        coordinatesIndex: 0,
        optimizeUVAllocation: true,
        coordinatesMode: 0,
        wrapU: 1,
        wrapV: 1,
        wrapR: 1,
        anisotropicFilteringLevel: 4,
        isCube: false,
        is3D: false,
        is2DArray: false,
        gammaSpace: true,
        invertZ: false,
        lodLevelInAlpha: false,
        lodGenerationOffset: 0,
        lodGenerationScale: 0,
        linearSpecularLOD: false,
        isRenderTarget: false,
        animations: [],
        invertY: true,
        samplingMode: 3,
        _useSRGBBuffer: false
      },
      isLocal: false,
      animations: [],
      beginAnimationOnStart: false,
      beginAnimationFrom: 0,
      beginAnimationTo: 60,
      beginAnimationLoop: false,
      startDelay: 0,
      renderingGroupId: 0,
      isBillboardBased: false,
      billboardMode: 7,
      minAngularSpeed: 0,
      maxAngularSpeed: 0,
      minSize: 1,
      maxSize: 1,
      minScaleX: 1,
      maxScaleX: 1,
      minScaleY: 1,
      maxScaleY: 1,
      minEmitPower: 1,
      maxEmitPower: 1,
      minLifeTime: 0.5,
      maxLifeTime: 1,
      emitRate: 10,
      gravity: [0, 0, 0],
      noiseStrength: [10, 10, 10],
      color1: [0.9921568627450981, 0.20784313725490197, 0.20784313725490197, 1],
      color2: [0.5215686274509804, 0.18823529411764706, 0.7607843137254902, 1],
      colorDead: [0, 0, 0, 1],
      updateSpeed: 0.01,
      targetStopDuration: 0.3,
      blendMode: 0,
      preWarmCycles: 0,
      preWarmStepOffset: 1,
      minInitialRotation: 0,
      maxInitialRotation: 0,
      startSpriteCellID: 0,
      spriteCellLoop: true,
      endSpriteCellID: 0,
      spriteCellChangeSpeed: 1,
      spriteCellWidth: 0,
      spriteCellHeight: 0,
      spriteRandomStartCell: false,
      isAnimationSheetEnabled: false,
      useLogarithmicDepth: false,
      sizeGradients: [
        {gradient: 0, factor1: 1, factor2: 1},
        {gradient: 1, factor1: 4, factor2: 4}
      ],
      textureMask: [1, 1, 1, 1],
      customShader: null,
      preventAutoStart: true
    };
    const collisionCircle = ParticleSystem.Parse(collisionCirclejson, this.scene, '');
    collisionCircle.particleTexture = new Texture(merge03); // LINK THIS TO: light_01.png
    collisionCircle.emitter = spawnLocation;

    // Uses texture: Circle_05.png
    const collisionStayOrbJson = {
      name: 'StayBehindOrb',
      id: 'StayBehindOrb',
      capacity: 200,
      disposeOnStop: false,
      manualEmitCount: -1,
      emitter: [0.25, 8, 0],
      particleEmitterType: {
        type: 'PointParticleEmitter',
        direction1: [0, 0, 0],
        direction2: [0, 0, 0]
      },
      texture: {
        tags: null,
        url: 'http://localhost:8080/assets/circle_05.png',
        uOffset: 0,
        vOffset: 0,
        uScale: 1,
        vScale: 1,
        uAng: 0,
        vAng: 0,
        wAng: 0,
        uRotationCenter: 0.5,
        vRotationCenter: 0.5,
        wRotationCenter: 0.5,
        homogeneousRotationInUVTransform: false,
        isBlocking: true,
        name: 'http://localhost:8080/assets/circle_05.png',
        hasAlpha: false,
        getAlphaFromRGB: false,
        level: 1,
        coordinatesIndex: 0,
        optimizeUVAllocation: true,
        coordinatesMode: 0,
        wrapU: 1,
        wrapV: 1,
        wrapR: 1,
        anisotropicFilteringLevel: 4,
        isCube: false,
        is3D: false,
        is2DArray: false,
        gammaSpace: true,
        invertZ: false,
        lodLevelInAlpha: false,
        lodGenerationOffset: 0,
        lodGenerationScale: 0,
        linearSpecularLOD: false,
        isRenderTarget: false,
        animations: [],
        invertY: true,
        samplingMode: 3,
        _useSRGBBuffer: false
      },
      isLocal: false,
      animations: [],
      beginAnimationOnStart: false,
      beginAnimationFrom: 0,
      beginAnimationTo: 60,
      beginAnimationLoop: false,
      startDelay: 1000,
      renderingGroupId: 0,
      isBillboardBased: true,
      billboardMode: 7,
      minAngularSpeed: 0,
      maxAngularSpeed: 0,
      minSize: 0.4,
      maxSize: 0.4,
      minScaleX: 1,
      maxScaleX: 1,
      minScaleY: 1,
      maxScaleY: 1,
      minEmitPower: 1,
      maxEmitPower: 1,
      minLifeTime: 5,
      maxLifeTime: 5,
      emitRate: 10,
      gravity: [0, 0, 0],
      noiseStrength: [10, 10, 10],
      color1: [0.8117647058823529, 0.29411764705882354, 0.8745098039215686, 1],
      color2: [0.9921568627450981, 0.4235294117647059, 1, 1],
      colorDead: [0, 0, 0, 1],
      updateSpeed: 0.01,
      targetStopDuration: 1,
      blendMode: 0,
      preWarmCycles: 0,
      preWarmStepOffset: 1,
      minInitialRotation: 0,
      maxInitialRotation: 0,
      startSpriteCellID: 0,
      spriteCellLoop: true,
      endSpriteCellID: 0,
      spriteCellChangeSpeed: 1,
      spriteCellWidth: 0,
      spriteCellHeight: 0,
      spriteRandomStartCell: false,
      isAnimationSheetEnabled: false,
      useLogarithmicDepth: false,
      startSizeGradients: [
        {gradient: 0, factor1: 0.1, factor2: 0.1},
        {gradient: 0.3, factor1: 2, factor2: 2},
        {gradient: 1, factor1: 1, factor2: 1}
      ],
      textureMask: [1, 1, 1, 1],
      customShader: null,
      preventAutoStart: true
    };
    const collisionStayOrb = ParticleSystem.Parse(collisionStayOrbJson, this.scene, '');
    collisionStayOrb.particleTexture = new Texture(dotTexture); // LINK THIS TO: circle_05.png
    collisionStayOrb.emitter = spawnLocation;
    collisionStayOrb.startDelay = 0;

    // Uses Texture: smoke_07.png
    const collisionSmokeJson = {
      name: 'ColissionSmoke',
      id: 'ColissionSmoke',
      capacity: 200,
      disposeOnStop: false,
      manualEmitCount: -1,
      emitter: [0.25, 8, 0],
      particleEmitterType: {
        type: 'PointParticleEmitter',
        direction1: [1, 1, 1],
        direction2: [-1, -1, -1]
      },
      texture: {
        tags: null,
        url: 'http://localhost:8080/assets/smoke_07.png',
        uOffset: 0,
        vOffset: 0,
        uScale: 1,
        vScale: 1,
        uAng: 0,
        vAng: 0,
        wAng: 0,
        uRotationCenter: 0.5,
        vRotationCenter: 0.5,
        wRotationCenter: 0.5,
        homogeneousRotationInUVTransform: false,
        isBlocking: true,
        name: 'http://localhost:8080/assets/smoke_07.png',
        hasAlpha: false,
        getAlphaFromRGB: false,
        level: 1,
        coordinatesIndex: 0,
        optimizeUVAllocation: true,
        coordinatesMode: 0,
        wrapU: 1,
        wrapV: 1,
        wrapR: 1,
        anisotropicFilteringLevel: 4,
        isCube: false,
        is3D: false,
        is2DArray: false,
        gammaSpace: true,
        invertZ: false,
        lodLevelInAlpha: false,
        lodGenerationOffset: 0,
        lodGenerationScale: 0,
        linearSpecularLOD: false,
        isRenderTarget: false,
        animations: [],
        invertY: true,
        samplingMode: 3,
        _useSRGBBuffer: false
      },
      isLocal: false,
      animations: [],
      beginAnimationOnStart: false,
      beginAnimationFrom: 0,
      beginAnimationTo: 60,
      beginAnimationLoop: false,
      startDelay: 0,
      renderingGroupId: 0,
      isBillboardBased: true,
      billboardMode: 7,
      minAngularSpeed: 0.4,
      maxAngularSpeed: 1,
      minSize: 0.3,
      maxSize: 0.3,
      minScaleX: 1,
      maxScaleX: 1,
      minScaleY: 1,
      maxScaleY: 1,
      minEmitPower: 0.1,
      maxEmitPower: 0.1,
      minLifeTime: 2,
      maxLifeTime: 3,
      emitRate: 10,
      gravity: [0, 0, 0],
      noiseStrength: [10, 10, 10],
      color1: [0.44313725490196076, 0.21176470588235294, 0.5529411764705883, 1],
      color2: [0.8705882352941177, 0.4, 0.9725490196078431, 1],
      colorDead: [0, 0, 0, 1],
      updateSpeed: 0.01,
      targetStopDuration: 3,
      blendMode: 0,
      preWarmCycles: 0,
      preWarmStepOffset: 1,
      minInitialRotation: 0,
      maxInitialRotation: 0,
      startSpriteCellID: 0,
      spriteCellLoop: true,
      endSpriteCellID: 0,
      spriteCellChangeSpeed: 1,
      spriteCellWidth: 0,
      spriteCellHeight: 0,
      spriteRandomStartCell: false,
      isAnimationSheetEnabled: false,
      useLogarithmicDepth: false,
      textureMask: [1, 1, 1, 1],
      customShader: null,
      preventAutoStart: true
    };
    const collisionSmoke = ParticleSystem.Parse(collisionSmokeJson, this.scene, '');
    collisionSmoke.particleTexture = new Texture(smoke); // LINK THIS TO: smoke_07.png
    collisionSmoke.emitter = spawnLocation;
    collisionStayOrb.startDelay = 1;

    const collisionSet = ParticleHelper.ExportSet([
      collisionParticle,
      collisionSmoke,
      collisionStayOrb,
      collisionCircle,
      collisionSparkFlying
    ]);

    //collisionSet.start();
    return collisionSet;
  }
}
